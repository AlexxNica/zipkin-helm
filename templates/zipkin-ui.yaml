apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: zipkin-ui
  labels:
    app: zipkin-ui
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.ui.replicaCount }}
  strategy:
    rollingUpdate:
      maxUnavailable: 2
  template:
    metadata:
      labels:
        app: zipkin-ui
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "docker.io/openzipkin/zipkin:{{ .Values.ui.imageVersion }}"
          ports:
            - containerPort: {{ .Values.ui.queryPort }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.ui.probeStartupDelay }}
            tcpSocket:
              port: {{ .Values.ui.queryPort }}
          readinessProbe:
            initialDelaySeconds: {{ .Values.ui.probeStartupDelay }}
            httpGet:
              path: /health
              port: {{ .Values.ui.queryPort }}
          resources:
            limits:
              cpu: "{{ .Values.ui.resources.cpuLimit }}"
              memory: "{{ .Values.ui.resources.ramMb }}Mi" # TODO fix this, this field id mi but the value is mb. There will be slight wastage
            requests:
              cpu: "{{ .Values.ui.resources.cpuRequest }}"
              memory: "{{ .Values.ui.resources.ramMb }}Mi" # TODO fix this, this field id mi but the value is mb. There will be slight wastage
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: QUERY_PORT
              value: "{{ .Values.ui.queryPort }}"
            - name: JAVA_OPTS
              value: "-XX:ConcGCThreads={{ .Values.node.cpus }} -XX:ParallelGCThreads={{ .Values.node.cpus }} -Djava.util.concurrent.ForkJoinPool.common.parallelism={{ .Values.node.cpus }} -Xms{{ .Values.ui.resources.ramMb }}M -Xmx{{ .Values.ui.resources.ramMb }}M -XX:+UseG1GC -server"
            - name: QUERY_ENABLED
              value: "true"
            - name: STORAGE_TYPE
              value: "{{ .Values.storageMethod }}"
{{if eq .Values.storageMethod "cassandra"}}
            - name: CASSANDRA_USERNAME
              value: "{{ .Values.cassandra.username }}"
            - name: CASSANDRA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: zipkin
                  key: cassandra.password
            - name: CASSANDRA_CONTACT_POINTS
              value: "{{ .Values.cassandra.contactPoints }}"
            - name: CASSANDRA_LOCAL_DC
              value: "{{ .Values.cassandra.localdc }}"
            - name: CASSANDRA_ENSURE_SCHEMA
              value: "{{ .Values.cassandra.ensureSchema }}"
{{ end }}